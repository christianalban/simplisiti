import{b as o,x as n}from"./index-3f981e9e.js";const p=async e=>{if(!e.file)throw new Error("File is required");const t=new FormData;return t.append("file",e.file),t.append("name",e.name),await n.post("resource",t)},u=async()=>await n.get("resource"),m=async e=>{const t=new FormData;return t.append("name",e.name),t.append("_method","PUT"),e.file&&t.append("file",e.file||null),await n.post(`resource/${e.id}`,t)},w=async e=>await n.delete(`resource/${e}`),r=o([]),c=async()=>{const e=await u();r.value=e.data.data},i=(e,t)=>{const a=e.content?e.content[t.name]:"";return{...t,default:a,value:a}},d=(e,t)=>{var a;return{...t,default:e.content?e.content[t.name]:"",value:(a=r.value.find(s=>e.content?s.id===+e.content[t.name]:!1))==null?void 0:a.url}},R=(e,t)=>t.type==="resource"?d(e,t):i(e,t),f=e=>r.value.find(t=>t.id===e),y=()=>({resources:r,loadResources:c,resourceFromId:f});export{m as a,p as c,w as d,u as g,R as p,y as u};
